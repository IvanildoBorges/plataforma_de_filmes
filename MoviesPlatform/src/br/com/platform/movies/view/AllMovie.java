package br.com.platform.movies.view;

import br.com.platform.movies.controller.MovieController;
import br.com.platform.movies.model.Movie;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elieudo Maia 
 * @author Ivanildo Borges
 */
public class AllMovie extends javax.swing.JFrame {
    private MovieController movieController;

    /**
     * Creates new form AllMovie
     */
    public AllMovie() {  
        this.movieController = new MovieController();
        initComponents();
        showInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    Logo = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    caixaCombin = new javax.swing.JComboBox<>();
    campoText = new javax.swing.JTextField();
    search = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    tabela = new javax.swing.JTable();
    jLabel3 = new javax.swing.JLabel();
    jButton2 = new javax.swing.JButton();
    backGround = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Todos os Filmes");
    setPreferredSize(new java.awt.Dimension(940, 570));
    setSize(new java.awt.Dimension(940, 570));
    getContentPane().setLayout(null);

    Logo.setFont(new java.awt.Font("Stencil", 0, 50)); // NOI18N
    Logo.setForeground(new java.awt.Color(255, 0, 0));
    Logo.setText("PLATAFORMA DE FILMES");
    getContentPane().add(Logo);
    Logo.setBounds(170, 20, 580, 60);

    jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jButton1.setForeground(new java.awt.Color(137, 61, 140));
    jButton1.setText("ADICIONAR");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    getContentPane().add(jButton1);
    jButton1.setBounds(790, 30, 130, 29);

    jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(130, 19, 138));
    jLabel1.setText("Todos os Filmes");
    getContentPane().add(jLabel1);
    jLabel1.setBounds(340, 100, 280, 40);

    jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(255, 255, 255));
    jLabel2.setText("Filtros:");
    getContentPane().add(jLabel2);
    jLabel2.setBounds(110, 500, 70, 20);

    caixaCombin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
    caixaCombin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome do filme", "Gênero", "Faixa Etária" }));
    caixaCombin.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        caixaCombinActionPerformed(evt);
      }
    });
    getContentPane().add(caixaCombin);
    caixaCombin.setBounds(170, 500, 120, 26);

    campoText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
    campoText.setForeground(new java.awt.Color(51, 51, 51));
    getContentPane().add(campoText);
    campoText.setBounds(110, 470, 550, 26);

    search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    search.setForeground(new java.awt.Color(137, 61, 140));
    search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/platform/movies/midia/button_search.jpg"))); // NOI18N
    search.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchActionPerformed(evt);
      }
    });
    getContentPane().add(search);
    search.setBounds(670, 470, 160, 30);

    jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setText("Clique na linha do filme que deseja assistir");
    getContentPane().add(jLabel4);
    jLabel4.setBounds(110, 170, 340, 30);

    tabela.setAutoCreateRowSorter(true);
    tabela.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    tabela.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null},
        {null, null, null, null, null, null, null}
      },
      new String [] {
        "Id", "Nome", "Gênero", "Descrição", "Duração", "Faixa Etária", "Dísponibilidade"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    tabela.setRowHeight(20);
    tabela.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tabelaMouseClicked(evt);
      }
    });
    jScrollPane2.setViewportView(tabela);
    if (tabela.getColumnModel().getColumnCount() > 0) {
      tabela.getColumnModel().getColumn(0).setResizable(false);
      tabela.getColumnModel().getColumn(0).setPreferredWidth(80);
      tabela.getColumnModel().getColumn(1).setPreferredWidth(250);
      tabela.getColumnModel().getColumn(2).setPreferredWidth(150);
      tabela.getColumnModel().getColumn(3).setPreferredWidth(250);
      tabela.getColumnModel().getColumn(4).setResizable(false);
      tabela.getColumnModel().getColumn(4).setPreferredWidth(80);
      tabela.getColumnModel().getColumn(5).setResizable(false);
      tabela.getColumnModel().getColumn(5).setPreferredWidth(100);
      tabela.getColumnModel().getColumn(6).setResizable(false);
      tabela.getColumnModel().getColumn(6).setPreferredWidth(130);
    }

    getContentPane().add(jScrollPane2);
    jScrollPane2.setBounds(110, 200, 720, 230);

    jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setText("Deseja filtrar um filme, gênero ou faixa etária :");
    getContentPane().add(jLabel3);
    jLabel3.setBounds(110, 440, 390, 30);

    jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jButton2.setForeground(new java.awt.Color(137, 61, 140));
    jButton2.setText("VOLTAR");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });
    getContentPane().add(jButton2);
    jButton2.setBounds(20, 30, 90, 29);

    backGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/platform/movies/midia/Retângulo 1.jpg"))); // NOI18N
    getContentPane().add(backGround);
    backGround.setBounds(0, 0, 940, 570);

    setSize(new java.awt.Dimension(958, 617));
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents
    
    //funcão para mostrar todos os filmes
    public void showInfo() {
        int linha = 0;
        List<Movie> movieList = this.movieController.listAll("", "", 0);
        DefaultTableModel modelo;
        String valor = "";
        
        try {
            modelo = (DefaultTableModel) tabela.getModel();
            modelo.setNumRows(0);
            
            while (linha < movieList.size()) {
             
                //Salva uma mensagem para disponibilidade do filme    
                if (movieList.get(linha).isIsAvaiable()) {
                    valor = "Diponível";
                } else {
                    valor = "Indiponível";
                }
                
                //Cria um objeto e adiciona numa linha da tabela
                //Cada linha é composta de colunas com os seguintes valores da
                //lista de filmes (movieList):
                modelo.addRow(new Object[]{
                    movieList.get(linha).getId(),
                    movieList.get(linha).getName(),
                    movieList.get(linha).getGenre(),
                    movieList.get(linha).getDescription(),
                    movieList.get(linha).getDuration(),
                    movieList.get(linha).getAgeRange(),
                    valor,
                    linha++
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String nome = campoText.getText();
        DefaultTableModel modelo;
        int linha = 0;
        String valor;
        
        try {  
            modelo = (DefaultTableModel) tabela.getModel();
            modelo.setNumRows(0);
            String selectBox = (String) caixaCombin.getSelectedItem();
            
            System.out.println(selectBox);
            System.out.println(nome);
            
            //comparar se exite nome, faixa etaria ou genenro do filme e mostrar os dados na tabela
            if ((selectBox == "Nome do filme") && (!nome.equals(""))) {
                List<Movie> nameMovie = this.movieController.listAll(nome, "", 0);
                
                while (linha < nameMovie.size()) {
                    if (nameMovie.get(linha).isIsAvaiable()) {
                        valor = "Diponível";
                    } else {
                        valor = "Indiponível";
                    }

                    modelo.addRow(new Object[]{
                        nameMovie.get(linha).getId(),
                        nameMovie.get(linha).getName(),
                        nameMovie.get(linha).getGenre(),
                        nameMovie.get(linha).getDescription(),
                        nameMovie.get(linha).getDuration(),
                        nameMovie.get(linha).getAgeRange(),
                        valor,
                        linha++
                    });
                } 
            } else if (selectBox.equals("Gênero") && !nome.equals("")) {
                //List<Movie> genreMovie = this.movieController.listAll("", nome, 0);
                
            } else if (selectBox.equals("Faixa Etária") && !nome.equals("")) {
                //int num = Integer.parseInt(nome);
                //List<Movie> faixaEtMovie = this.movieController.listAll("", "", num);
            } else {
                showInfo();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new UpdateMovie().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void caixaCombinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caixaCombinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caixaCombinActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked

        try {
            int linha = tabela.getSelectedRow();
//            int coluna = tabela.getSelectedColumn();
            int colunaAux = 0;
            int identificador;
            
            System.out.println("LINHA: " + linha);
            System.out.println("COLUNA: " + colunaAux);
            
            identificador = (int) tabela.getValueAt(linha, colunaAux);
            System.out.println("ID do Filme " + identificador);
            
            Watch assistir = new Watch();
            assistir.setId(identificador);
            assistir.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {
           e.printStackTrace();
        }
    }//GEN-LAST:event_tabelaMouseClicked

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    new MyAccount().setVisible(true);
    this.setVisible(false);
  }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllMovie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllMovie().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel Logo;
  private javax.swing.JLabel backGround;
  private javax.swing.JComboBox<String> caixaCombin;
  private javax.swing.JTextField campoText;
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton search;
  private javax.swing.JTable tabela;
  // End of variables declaration//GEN-END:variables
}
